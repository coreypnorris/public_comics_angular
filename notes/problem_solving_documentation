Problem Solving Documentation

Brand new project
--
* Create a file in the root directory called server.js and add the following code:
var http = require('http');
var port = 3000;

http.createServer(function(req, res) {
      res.writeHead(200, {
            'Content-Type': 'text/plain'
      });

      res.end("Hello Mitnick, you've just stumbled on the simplest web server ever");
}).listen(port);

console.log('Our awesome web server running at http://localhost:'+ port);

Brand new project
--
* Run `express --ejs name_of_your_app` to create the app foundation


Add Angular, Jquery, Normalize, Bootstrap, and Fontawesome with Bower
--
* Create the bower file with `bower init`
* Add the bower packages with `bower install jquery angular normalize.css bootstrap fontawesome  --save`
* Add the bower packages to the `./views/index.ejs` file:
<script src='/bower_components/jquery/dist/jquery.js'></script>
<script src='/bower_components/angular/angular.js'></script>
<link rel='stylesheet' href='/bower_components/normalize.css/normalize.css' />
<link rel='stylesheet' href='/bower_components/fontawesome/css/font-awesome.css' />
<link rel='stylesheet' href='/bower_components/bootstrap/dist/css/bootstrap.css' />

Add Gulp, Sass, and Live Reload
--
* Install the packages with `npm install --save-dev gulp gulp-shell gulp-livereload gulp-ruby-sass`
* Create the sass folder and file `./public/sass/sass.scss`
* Add the sass file in `./views/index.ejs`:
<link rel='stylesheet' href='/stylesheets/sass.css' />
* Create the gulpfile `./gulpfile.js` and add the following code:
var gulp = require('gulp');
var sass = require('gulp-ruby-sass');
var shell = require('gulp-shell');
var livereload = require('gulp-livereload');

gulp.task('npmInstall', shell.task([
  'npm install',
]));

gulp.task('compileSass', ['npmInstall'], function() {
  return sass('./public/sass/sass.scss', { style: 'compressed' })
    .pipe(gulp.dest('./public/stylesheets/'))
    .pipe(livereload());
});

gulp.task('watch', ['npmInstall', 'compileSass'], function() {
  var server = livereload();
  gulp.watch('./public/sass/sass.scss', ['compileSass']);
});

gulp.task('copyBowerComponents', ['npmInstall', 'compileSass', 'watch'], function () {
  gulp.src('./bower_components/**')
    .pipe(gulp.dest('./public/bower_components'));
});

gulp.task('start', ['npmInstall', 'compileSass', 'watch', 'copyBowerComponents'], shell.task([
  'npm install',
  'node ./bin/www'
]));

gulp.task('default', ['compileSass', 'watch', 'copyBowerComponents', 'start']);

* Now we can use the `gulp` command to start our app server

Add Angular to an app
--
* Replace the contents of the body tag in ./views/index.ejs with:
<div class="container">
  <div ng-app="angularApp">
      <div ui-view></div>
    </div>
  </div>
</div>
* create `./public/javascripts/angularApp.js` and include it in the index.html file:
<script src='/javascripts/angularApp.js'></script>
* in main.js add the following code.
angular
  .module('angularApp', [

  ]);

Adding a new page in an angular app
--

* create the state to handle the route
* create the template to render the html
* create the controller to handle the logic

Add a partial template in Angular app
--
* create a partial in the templates folder. For example: templates/nav.html
* add it to the index.html page like this
  <header ng-include="'templates/nav.html'"></header>

Adding a simple routes in Angular
--
* Install ui-router
* add the following dependencies to the app in the main.js file
angular
  .module('app', [
    'ui.router'
  ])
  .config(['$urlRouterProvider', '$stateProvider', function($urlRouterProvider, $stateProvider) {

  }]);

* add the default route
angular
  .module('app', [
    'ui.router'
  ])
  .config(['$urlRouterProvider', '$stateProvider', function($urlRouterProvider, $stateProvider) {
    $urlRouterProvider.otherwise('/');
  }])

* add some states
angular
  .module('app', [
    'ui.router'
  ])
  .config(['$urlRouterProvider', '$stateProvider', function($urlRouterProvider, $stateProvider) {
    $urlRouterProvider.otherwise('/');

    $stateProvider
      .state('home', {
        url: '/',
        templateUrl: 'templates/home.html'
      })
      .state('about', {
        url: '/about',
        templateUrl: 'templates/about.html'
      });
  }]);

* Add the home.html and about.html template files

Adding controller logic
--
* Create a controllers folder in app/scripts/controllers
* Create a home controller file in app/scripts/controllers/homeCtrl.js
* Add the logic in the homeCtrl.js file
angular
  .module('app')
  .controller('homeCtrl', ['$scope', function($scope) {
    $scope.title = 'Home';
    $scope.items = ['item1', 'item2', 'item3'];
  }]);

* Add the controller file to the index.html file
<script src="scripts/main.js"></script>
<script src="scripts/controllers/homeCtrl.js"></script>

* Add the home controller to the home state
angular
  .module('app', [
    'ui.router'
  ])
  .config(['$urlRouterProvider', '$stateProvider', function($urlRouterProvider, $stateProvider) {
    $urlRouterProvider.otherwise('/');

    $stateProvider
      .state('home', {
        url: '/',
        templateUrl: 'templates/home.html',
        controller: 'homeCtrl'
      })
      .state('about', {
        url: '/about',
        templateUrl: 'templates/about.html'
      });
  }]);

* Add the variables to the templates/home file
<h1>{{title}}</h1>
<ul>
  <li ng-repeat="item in items">{{item}}</li>
</ul>


Features Roadmap
--
About Page
Authentication
Uploading comics
Displaying comics
Reading comics

